package br.gaveteiro.senai.controller;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.gaveteiro.senai.dao.PedidoDao;
import br.gaveteiro.senai.dao.StatusDao;
import br.gaveteiro.senai.modelo.Pedido;
import br.gaveteiro.senai.modelo.Status;

@RestController
public class PedidoRestController {
	@Autowired
	private PedidoDao pedidoDao;
	
	@RequestMapping(value = "/pedido/{idPedido}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ResponseEntity<Pedido> listar(@PathVariable Long idPedido) {
		try {
			Pedido pedido = pedidoDao.listar(idPedido);
			return ResponseEntity.ok(pedido);
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
	
	@RequestMapping(value = "/pedido", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public List<Pedido> listar(){
		return pedidoDao.listar();
	}
	
	
	public ResponseEntity<Void> alterarStatus(@PathVariable Long idPedido, @RequestBody Long idStatus)
	{
		try {
			StatusDao statusDao = new StatusDao();
			Status status = statusDao.listar(idStatus);
			if(status != null)
			{
				pedidoDao.alterarStatus(idPedido, status);
				HttpHeaders responseHeaders = new HttpHeaders();
				URI location = new URI("/pedido/"+idPedido);
				return ResponseEntity<>(responseHeaders, location);
			}
			else{
				return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
			}
			
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
}
