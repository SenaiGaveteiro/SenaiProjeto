package br.gaveteiro.senai.controller;

import java.net.URI;
import java.util.List;

import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.gaveteiro.senai.dao.TipoUsuarioDao;
import br.gaveteiro.senai.modelo.TipoUsuario;

@RestController
public class TipoUsuarioRestController {
	@Autowired
	TipoUsuarioDao tipoUsuarioDao;
	
	@RequestMapping(value = "/tipo", method = RequestMethod.POST, consumes = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ResponseEntity<TipoUsuario> inserir(@RequestBody String strTipoUsuario)
	{
		try {
			JSONObject job = new JSONObject(strTipoUsuario);
			TipoUsuario tipo = new TipoUsuario();
			tipo.setDescricao(job.getString("descricao"));
			
			/*JSONArray arrayTipos = job.getJSONArray("usuarios");
			List<Usuario> usuarios = new ArrayList<Usuario>();
			if(arrayTipos.length() >= 0)
			{
				for (int i = 0; i < arrayTipos.length(); i++) {
					JSONObject jsonTipo =  arrayTipos.getJSONObject(i);
					Usuario usuario = new Usuario();
					usuario.setNome(jsonTipo.getString("nome"));
					usuario.setCpf(cpf);
					usuarios.add(usuario);
				}
			}*/
				
		 tipoUsuarioDao.inserir(tipo);
		 URI location = new URI("/tipo/"+tipo.getIdTipo());
		 return ResponseEntity.created(location).body(tipo);
		 
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
	
	@RequestMapping(value = "/tipo", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public List<TipoUsuario> listar()
	{
		return tipoUsuarioDao.listar();
	}
	
	@RequestMapping(value = "/tipo/{idTipoUsuario}", method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public ResponseEntity<TipoUsuario> listar(@PathVariable Long idTipoUsuario)
	{
		try {
			TipoUsuario tipo = tipoUsuarioDao.listar(idTipoUsuario);
			return ResponseEntity.ok(tipo); 
		} catch (Exception e) {
			return new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	
	@RequestMapping(value = "/tipo", method = RequestMethod.DELETE, consumes = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public void excluir(@RequestBody String strTipoUsuario)
	{
		try {
			JSONObject job = new JSONObject(strTipoUsuario);
			TipoUsuario tipo = TipoUsuario();
			tipo.setIdTipo(job.getLong("idTipo"));
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	
}
